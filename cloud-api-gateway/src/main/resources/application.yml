spring:
  application:
    name: gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # turn-off automatic locator
          lower-case-service-id: true
      # for all - # remove duplicate values of Access-Control-Allow-Credentials and Access-Control-Allow-Origin response headers in cases when both the gateway CORS logic and the downstream add them.
      default-filters: DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      routes[0]:
        id: books-service-get-books
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/books
        predicates[1]: Method=GET
        filters[0]: RemoveRequestHeader=Cookie
      routes[1]:
        id: books-service-get-book
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/books/**
        predicates[1]: Method=GET
        filters[0]: RemoveRequestHeader=Cookie
      routes[2]:
        id: books-service-create-book
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/books
        predicates[1]: Method=POST
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[3]:
        id: books-service-update-book
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/books/**
        predicates[1]: Method=PUT
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[4]:
        id: books-service-partially-update-book
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/books/**
        predicates[1]: Method=PATCH
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[5]:
        id: books-service-delete-book
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/books/**
        predicates[1]: Method=DELETE
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[6]:
        id: users-service-login
        uri: lb://users-service/
        predicates[0]: Path=/login
        predicates[1]: Method=POST
        filters[0]: RemoveRequestHeader=Cookie
      routes[7]:
        id: users-service-register
        uri: lb://users-service/
        predicates[0]: Path=/register
        predicates[1]: Method=POST
        filters[0]: RemoveRequestHeader=Cookie
      routes[8]:
        id: users-service-reset-access-token
        uri: lb://users-service/
        predicates[0]: Path=/resettoken
        predicates[1]: Method=POST
        filters[0]: RemoveRequestHeader=Cookie
      routes[9]:
        id: books-service-get-my-books
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/my-books
        predicates[1]: Method=GET
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[10]:
        id: books-service-get-wishlist
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/wishlist
        predicates[1]: Method=GET
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[11]:
        id: books-service-add-to-my-books
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/my-books/**
        predicates[1]: Method=POST
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[12]:
        id: books-service-add-to-wishlist
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/wishlist/**
        predicates[1]: Method=POST
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[13]:
        id: books-service-remove-from-my-books
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/my-books/**
        predicates[1]: Method=DELETE
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie
      routes[14]:
        id: books-service-delete-from-wishlist
        uri: lb://books-service/
        predicates[0]: Path=/api/v1/wishlist/**
        predicates[1]: Method=DELETE
        predicates[2]: Header=Authorization, Bearer (.*)
        filters[0]: RemoveRequestHeader=Cookie

server:
  port: 9090  # port where all requests will be coming
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka, http://localhost2:8762/eureka, http://localhost3:8763/eureka

# trace gateway logs
logging:
  level:
    org.springframework.cloud.gateway: debug
    reactor.netty.http.client: debug